#!/usr/bin/env sh

set -e

test "$(id -u)" -eq 0 || {
        echo "src-update/error: need to be root" 1>&2;
        exit 1
}

cd /home/src

rm -f -- mr/TUPDATES mr/FUPDATES

user=user1

su ${user} ./src mirror || :;
su ${user} ./src wrebase || :;

if
        test -e mr/UPDATES
then
        test "$(stat -c %s "mr/UPDATES" 2>/dev/null)" -lt 2 && {
                echo "src-update/error: mr/UPDATES is empty" 1>&2;
                exit 1
        }
else
        echo "src-update: No worktree updates available at all" 1>&2;
        exit 0
fi

while
        IFS= read -r src
do
        error=0
        IFS= read -r context < "/home/src/mr/${src}/SCONTEXT" || :;

        case "$context" in
        local)
                sudo="su ${user}"
        ;;
        global|system)
                sudo=
        ;;
        *)
                echo "src-update/error: no context found" 1>&2;
                exit 1
        esac

        ${sudo} ./src init "$src" || :;

        for _a in install stow
        do
                ${sudo} ./src "$_a" "$src" || error=1;
        done

        if
                test "$error" -eq 0
        then
                ed -s mr/UPDATES <<S
g/^$(echo "$src" | sed -e 's|/|\\/|g')\$/d
w
S
                sed -e 's|/|::|g' >> mr/TUPDATES <<IN
"$src"
IN
                ${sudo} ./src chop "$src" || :;
        else
                echo "$src" >> mr/FUPDATES;
        fi

done < mr/UPDATES

chmod 777 mr/UPDATES mr/NUPDATES mr/FUPDATES 2>/dev/null || :;

if
        tty 1>/dev/null 2>&1
then
        p=less
else
        p=cat
fi

{
        test -e mr/NUPDATES && {
                echo "src-update/error: new updates set up:"
                ./scripts/src-list \
                | grep -F -f mr/NUPDATES;
        }

        test -e mr/FUPDATES && {
                echo "src-update/error: at least one update failed:"
                cat mr/FUPDATES
        }
} | "$p";

# vim: set ts=8 sw=8 tw=0 et :
